[versions]
compose = "1.6.2"
agp = "8.2.0"
compose-compiler = "1.5.10"
android-minSdk = "24"
android-compileSdk = "34"
android-targetSdk = "34"
androidx-activityCompose = "1.8.2"
androidx-core-ktx = "1.12.0"
compose-material = "1.2.0"
androidx-test-junit = "1.1.5"
androidx-espresso-core = "3.5.1"
kotlin = "1.9.22"
junit = "4.13.2"
decompose = "2.2.2"
essenty = "1.3.0"
darwin = "0.2.3"
kotlinxSerializationJson = "1.6.2"
koin = "3.5.0"
ktor = "2.3.7"
mokoRes = "0.24.0-alpha-4"
playServicesLocation = "21.1.0"
accompanist = "0.32.0"
preference = "1.1.1"
coil = "2.6.0"
placeholder = "1.1.2"
mindbox = "2.8.3"



[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-extensions-compose = { module = "com.arkivanov.decompose:extensions-compose-jetpack", version.ref = "decompose" }
essenty-lifecycle = { module = "com.arkivanov.essenty:lifecycle", version.ref = "essenty" }
essenty-state-keeper = { module = "com.arkivanov.essenty:state-keeper", version.ref = "essenty" }
parcelize-darwin-runtime = { module = "com.arkivanov.parcelize.darwin:runtime", version.ref = "darwin" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
resources-generator = { module = "dev.icerock.moko:resources-generator", version.ref = "mokoRes" }
resources = { module = "dev.icerock.moko:resources", version.ref = "mokoRes" }
google-location = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocation" }
google-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "preference" }
multiplatform-settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "preference" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
placeholder-material3 = { module = "io.github.fornewid:placeholder-material3", version.ref = "placeholder" }
mindbox-sdk = { module = "cloud.mindbox:mobile-sdk", version.ref = "mindbox" }
mindbox-firebase = { module = "cloud.mindbox:mindbox-firebase", version.ref = "mindbox" }


[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
resources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "mokoRes" }